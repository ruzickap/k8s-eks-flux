name: test-k8s-eks-flux

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: Action
        default: create + delete
        options:
          - create
          - delete
          - create + delete
        required: true
      cluster_name:
        description: Cluster Name
        # use only kube1 or kube2 due to GitHub Oauth
        default: kube2
        required: false

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_CONSOLE_ADMIN_ROLE_ARN: ${{ secrets.AWS_CONSOLE_ADMIN_ROLE_ARN }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_USER_ROLE_ARN: ${{ secrets.AWS_USER_ROLE_ARN }}
  BASE_DOMAIN: k8s.mylabs.dev
  GH_TOKEN_K8S_EKS: ${{ secrets.GH_TOKEN_K8S_EKS }}
  MY_COOKIE_SECRET: ${{ secrets.MY_COOKIE_SECRET }}
  MY_GITHUB_ORG_OAUTH_DEX_CLIENT_ID_KUBE1: ${{ secrets.MY_GITHUB_ORG_OAUTH_DEX_CLIENT_ID_KUBE1 }}
  MY_GITHUB_ORG_OAUTH_DEX_CLIENT_ID_KUBE2: ${{ secrets.MY_GITHUB_ORG_OAUTH_DEX_CLIENT_ID_KUBE2 }}
  MY_GITHUB_ORG_OAUTH_DEX_CLIENT_SECRET_KUBE1: ${{ secrets.MY_GITHUB_ORG_OAUTH_DEX_CLIENT_SECRET_KUBE1 }}
  MY_GITHUB_ORG_OAUTH_DEX_CLIENT_SECRET_KUBE2: ${{ secrets.MY_GITHUB_ORG_OAUTH_DEX_CLIENT_SECRET_KUBE2 }}
  MY_GITHUB_WEBHOOK_TOKEN: ${{ secrets.MY_GITHUB_WEBHOOK_TOKEN }}
  MY_PASSWORD: ${{ secrets.MY_PASSWORD }}
  OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID }}
  OKTA_CLIENT_SECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
  OKTA_ISSUER: ${{ secrets.OKTA_ISSUER }}
  SLACK_INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}

concurrency: test-k8s-eks-flux

jobs:
  create-k8s-eks-flux:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.inputs.action, 'create') || ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) }}
    steps:
      - uses: actions/checkout@v2

      - name: Replace CLUSTER_NAME variable if defined manually
        if: ${{ github.event.inputs.cluster_name }}
        run: |
          echo "CLUSTER_NAME=${{ github.event.inputs.cluster_name }}" >> "${GITHUB_ENV}"

      - name: Create EKS cluster + environment
        run: |
          docker run -i --rm \
            -e AWS_ACCESS_KEY_ID \
            -e AWS_ACCOUNT_ID \
            -e AWS_CONSOLE_ADMIN_ROLE_ARN \
            -e AWS_SECRET_ACCESS_KEY \
            -e AWS_USER_ROLE_ARN \
            -e BASE_DOMAIN \
            -e CLUSTER_NAME \
            -e GITHUB_TOKEN="${GH_TOKEN_K8S_EKS}" \
            -e MY_COOKIE_SECRET \
            -e MY_GITHUB_ORG_OAUTH_DEX_CLIENT_ID_KUBE1 \
            -e MY_GITHUB_ORG_OAUTH_DEX_CLIENT_ID_KUBE2 \
            -e MY_GITHUB_ORG_OAUTH_DEX_CLIENT_SECRET_KUBE1 \
            -e MY_GITHUB_ORG_OAUTH_DEX_CLIENT_SECRET_KUBE2 \
            -e MY_GITHUB_WEBHOOK_TOKEN \
            -e MY_PASSWORD \
            -e OKTA_CLIENT_ID \
            -e OKTA_CLIENT_SECRET \
            -e OKTA_ISSUER \
            -e SLACK_INCOMING_WEBHOOK_URL \
            -v "${PWD}:/mnt" \
            -w /mnt \
            ubuntu \
            bash -eu -c " \
              ./create-k8s-eks-flux.sh ;\
              ./create-k8s-eks-flux.sh ;\
              sleep 400 ;\
              export KUBECONFIG=\"\${PWD}/tmp/\${CLUSTER_NAME}.\${BASE_DOMAIN}/kubeconfig-\${CLUSTER_NAME}.conf\" ;\
              kubectl get pods -A ;\
              kubectl get helmreleases.helm.toolkit.fluxcd.io -A ;\
              kubectl get helmrepositories.source.toolkit.fluxcd.io -A ;\
              kubectl get kustomizations.kustomize.toolkit.fluxcd.io -A ;\
              kubectl get certificates -A ;\
              helm ls -A ;\
            "

  delete-k8s-eks-flux:
    runs-on: ubuntu-latest
    needs: create-k8s-eks-flux
    if: ${{ contains(github.event.inputs.action, 'delete') || ( github.event_name == 'push' && github.ref == 'refs/heads/main' && always() ) }}
    steps:
      - uses: actions/checkout@v2

      - name: Replace CLUSTER_NAME variable if defined manually
        if: ${{ github.event.inputs.cluster_name }}
        run: |
          echo "CLUSTER_NAME=${{ github.event.inputs.cluster_name }}" >> "${GITHUB_ENV}"

      - name: Delete EKS cluster + environment
        run: |
          docker run -i --rm \
            -e AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY \
            -e CLUSTER_NAME \
            -e GITHUB_TOKEN="${GH_TOKEN_K8S_EKS}" \
            -v "${PWD}:/mnt" \
            -w /mnt \
            ubuntu \
            bash -eu -c " \
              ./delete-k8s-eks-flux.sh ;\
            "
